---

# apigateway REST access configs
vars_apigateway_rest_protocol: "{{ vars_apigateway_protocol }}"
vars_apigateway_rest_host: "{{ vars_apigateway_host }}"
vars_apigateway_rest_port: "{{ vars_apigateway_port }}"

# apigateway portchecks configs
vars_portscheck_host: "{{ vars_apigateway_host }}"
vars_portscheck_ports:
  - "{{ vars_apigateway_port }}"
vars_portscheck_ports_timeout: 900

# local users
vars_apigateway_usermgt_users:
  - loginId: "{{ vars_apigateway_usermgt_users_sample1_username }}"
    firstName: Sample User1
    lastName: Api Admin
    password: "{{ vars_apigateway_usermgt_users_sample1_password }}"
    emailAddresses:
      - "{{ vars_apigateway_usermgt_users_sample1_username }}@sample.com"
    allowDigestAuth: false
    active: true
    language: en
  - loginId: "{{ vars_apigateway_usermgt_users_sample2_username }}"
    firstName: Sample User2
    lastName: Api Provider
    password: "{{ vars_apigateway_usermgt_users_sample2_password }}"
    emailAddresses:
      - "{{ vars_apigateway_usermgt_users_sample2_username }}@sample.com"
    allowDigestAuth: false
    active: true
    language: en
  - loginId: "{{ vars_apigateway_usermgt_users_sample3_username }}"
    firstName: Sample User3
    lastName: Api User
    password: "{{ vars_apigateway_usermgt_users_sample3_password }}"
    emailAddresses:
      - "{{ vars_apigateway_usermgt_users_sample3_username }}@sample.com"
    allowDigestAuth: false
    active: true
    language: en

## local usergroups
vars_apigateway_usermgt_groups:
  - name: sample-apigateway-admins
    description: apigateway-admins
    empty_user_ids: false
    user_loginids_add:
      - "{{ vars_apigateway_usermgt_users_sample1_username }}"
  - name: sample-apigateway-providers
    description: apigateway-providers
    empty_user_ids: false
    user_loginids_add:
      - "{{ vars_apigateway_usermgt_users_sample2_username }}"
  - name: sample-apigateway-users
    description: apigateway-users
    empty_user_ids: false
    user_loginids_add:
      - "{{ vars_apigateway_usermgt_users_sample3_username }}"

## access profiles 
## (note: the group names / user names will get replaced by their IDs in the real REST request, and merged with the userIds/groupIds fields)
vars_apigateway_usermgt_accessprofiles:
  - name: sample-apigateway-users-team
    description: apigateway-users-team description
    privilege: "10010010010100000001010001"
    groupnames:
      - sample-apigateway-users
    groupIds: []
    teamAdmin:
      usernames: []
      groupnames: []
  - name: sample-apigateway-providers-team
    description: apigateway-providers-team description
    privilege: "111111111111111111111111100"
    groupnames:
      - sample-apigateway-providers
    groupIds: []
    teamAdmin:
      usernames: []
      groupnames: []
  - name: sample-apigateway-admins-team
    description: apigateway-admins-team description
    privilege: "111111111111111111111111111"
    groupnames:
      - sample-apigateway-admins
    groupIds: []
    teamAdmin:
      usernames: []
      groupnames: []

## apigateway custom port types
vars_apigateway_ports_list: []

## extended settings - apigateway settings (note: this are replicated in the cluster)
vars_apigateway_extended_settings_coregateway_extended_keys: {}

## api portal registration
vars_apigateway_portalgateway:
  gatewayName: "API_Gateway_{{ vars_apigateway_environment_stage }}"
  gatewayDescription: "API Gateway in {{ vars_apigateway_environment_stage }} environment"
  gatewayUsername: "{{ vars_apigateway_portalgateway_gateway_username }}"
  gatewayPassword: "{{ vars_apigateway_portalgateway_gateway_password }}"
  gatewayURL: "{{ vars_apigateway_portalgateway_gateway_url }}"
  version: "{{ vars_apigateway_portalgateway_version }}"
  stageName: "{{ vars_apigateway_environment_stage }}"
  published: true
  externalPortal:
    endpointTenant: "default"
    endpointURL: "{{ vars_apigateway_portalgateway_portal_url }}"
    endpointUsername: "{{ vars_apigateway_portalgateway_portal_username }}"
    endpointPassword: "{{ vars_apigateway_portalgateway_portal_password }}"
    type: "apiportal"

## api gateway promotion stages
vars_apigateway_promotions_stages:
  # - name: "{{ vars_apigateway_environment_stage }}"
  #   description: "{{ vars_apigateway_environment_stage }} Stage"
  #   url: "https://apigateway105-irsrepro.clouddemo.saggov.com"
  #   username: "{{ webmethods_secrets_promotionsmgt_user }}"
  #   password: "{{ webmethods_secrets_promotionsmgt_password }}"
  #   keystoreAlias: "{{ webmethods_apigateway_keystore_name }}"
  #   keyAlias: "{{ webmethods_apigateway_keystore_keyalias }}"

## api gateway connectivity to ldap
vars_apigateway_ldap_settings: {}

## api gateway saml settings
vars_apigateway_saml_settings: {}

# api plans to add or update
vars_apigateway_plans:
  - name: gold
    version: "1.0"
    deprecated: false
    isProtected: false
    policiesNames: []
    cost:
      currency:
      value:
      duration:
    quota:
      enforcementPolicyName: ""
    protected: false
  - name: silver
    version: "1.0"
    deprecated: false
    isProtected: false
    policiesNames: []
    cost:
      currency:
      value:
      duration:
    quota:
      enforcementPolicyName: ""
    protected: false
  - name: bronze
    version: "1.0"
    deprecated: false
    isProtected: false
    policiesNames: []
    cost:
      currency:
      value:
      duration:
    quota:
      enforcementPolicyName: ""
    protected: false

# api packages to add or update
# the following attributes with "custom_" will be transformed to corresponding attributes of internal ids:
# - custom_apiIdsByFilter --> apiIds
# - custom_planIdsByFilter --> planIds
# - custom_policyIdsByFilter --> policyIds
vars_apigateway_packages:
  - name: Swag Pack Complete
    version: "1.0"
    deprecated: false
    custom_apiIdsByFilter:
      - name: "bookstore"
        version: "1.0"
      - name: "uszip"
        version: "1.0"
    custom_planIdsByFilter:
      - name: "gold"
        version: "1.0"
      - name: "silver"
        version: "1.0"
      - name: "bronze"
        version: "1.0"
    publishedPortals: []
    custom_policyIdsByFilter: []
    active: true
  - name: Swag Pack Bookstore
    version: "1.0"
    deprecated: false
    custom_apiIdsByFilter:
      - name: "bookstore"
        version: "1.0"
    custom_planIdsByFilter:
      - name: "gold"
        version: "1.0"
      - name: "silver"
        version: "1.0"
      - name: "bronze"
        version: "1.0"
    publishedPortals: []
    custom_policyIdsByFilter: []
    active: true
  - name: Swag Pack UsZip
    version: "1.0"
    deprecated: false
    custom_apiIdsByFilter:
      - name: "uszip"
        version: "1.0"
    custom_planIdsByFilter:
      - name: "gold"
        version: "1.0"
      - name: "silver"
        version: "1.0"
      - name: "bronze"
        version: "1.0"
    publishedPortals: []
    custom_policyIdsByFilter: []
    active: true

# applications to add or update
# the following attributes with "names/version" will be transformed to corresponding attributes of internal ids:
# - custom_registerAPIsByFilter --> triggers the registration apis call
vars_apigateway_applications:
  - name: Sample Bookstore Application
    description: Sample application needing access to the Bookstore APIs
    version: "1.0"
    custom_registerAPIsByFilter:
      - name: "bookstore"
        version: "1.0"
    contactEmails: []
    siteURLs: []
    identifiers:
      - value:
          - "{{ vars_apigateway_usermgt_users_sample1_username }}"
        name: Username
        key: httpBasicAuth
      - value:
          - "{{ vars_apigateway_usermgt_users_sample2_username }}"
        name: Username
        key: httpBasicAuth
      - value:
          - "{{ vars_apigateway_usermgt_users_sample3_username }}"
        name: Username
        key: httpBasicAuth
    consumingAPIs: []
    isSuspended: false
    jsOrigins: []
    authStrategyIds: []
    restrictViewAsset: false
    teams: []
  - name: Sample UsZip Application
    description: Sample application needing access to the UsZip APIs
    version: "1.0"
    custom_registerAPIsByFilter:
      - name: "uszip"
        version: "1.0"
    contactEmails: []
    siteURLs: []
    identifiers:
      - value:
          - "{{ vars_apigateway_usermgt_users_sample1_username }}"
        name: Username
        key: httpBasicAuth
      - value:
          - "{{ vars_apigateway_usermgt_users_sample2_username }}"
        name: Username
        key: httpBasicAuth
      - value:
          - "{{ vars_apigateway_usermgt_users_sample3_username }}"
        name: Username
        key: httpBasicAuth
    consumingAPIs: []
    isSuspended: false
    jsOrigins: []
    authStrategyIds: []
    restrictViewAsset: false
    teams: []
  - name: Sample Covid Report Application
    description: Sample Covid Report application needing access to the Covid Report APIs
    version: "1.0"
    custom_registerAPIsByFilter:
      - name: "covid"
        version: "1.0"
    contactEmails: []
    siteURLs: []
    identifiers:
      - value:
          - "{{ vars_apigateway_usermgt_users_sample1_username }}"
        name: Username
        key: httpBasicAuth
      - value:
          - "{{ vars_apigateway_usermgt_users_sample2_username }}"
        name: Username
        key: httpBasicAuth
      - value:
          - "{{ vars_apigateway_usermgt_users_sample3_username }}"
        name: Username
        key: httpBasicAuth
    consumingAPIs: []
    isSuspended: false
    jsOrigins: []
    authStrategyIds: []
    restrictViewAsset: false
    teams: []

# APIs to publish to api portal
# each list item will publish a list of APIs to a list of communities using the same portalGatewayId
vars_apigateway_apis_publish_groups:
  - lookup_portalGatewayId:
      name: "API_Gateway_{{ vars_apigateway_environment_stage }}"
      version: "1.0"
      stageName: "{{ vars_apigateway_environment_stage }}"
    lookup_communityIds:
      - name: "Public Community"
    lookup_apiIds:
      - name: "bookstore"
        version: "1.0"
      - name: "uszip"
        version: "1.0"
      - name: "covid"
        version: "1.0"

# API Packages to publish to api portal
# each list item will publish a list of Packages to a list of communities using the same portalGatewayId
vars_apigateway_packages_publish_groups:
  - lookup_portalGatewayId:
      name: "API_Gateway_{{ vars_apigateway_environment_stage }}"
      version: "1.0"
      stageName: "{{ vars_apigateway_environment_stage }}"
    lookup_communityIds:
      - name: "Public Community"
    lookup_packageIds:
      - name: Swag Pack Complete
        version: "1.0"
      - name: Swag Pack Bookstore
        version: "1.0"
      - name: Swag Pack UsZip
        version: "1.0"
      - name: Swag Pack CovidReports
        version: "1.0"


## api packages to import into gateway
vars_apigateway_archive_imports_from_s3:
  - bucket_path: "demo_repo/apigateway_archives/10.7/apigw107-archive-uszip-1.0.zip"
    local_path: "{{ ansible_env.HOME }}/install_artifacts/apigw107-archive-uszip-1.0.zip"
    overwrite: "apis,policies,policyactions"
    fixingMissingVersions: "true"
    preserveAssetState: "true"
  - bucket_path: "demo_repo/apigateway_archives/10.7/apigw107-archive-bookstore-1.0.zip"
    local_path: "{{ ansible_env.HOME }}/install_artifacts/apigw107-archive-bookstore-1.0.zip"
    overwrite: "apis,policies,policyactions"
    fixingMissingVersions: "true"
    preserveAssetState: "true"
  - bucket_path: "demo_repo/apigateway_archives/10.7/global_policies/Transaction_logging.zip"
    local_path: "{{ ansible_env.HOME }}/install_artifacts/Transaction_logging.zip"
    overwrite: "*"
    fixingMissingVersions: "true"
    preserveAssetState: "true"
  - bucket_path: "demo_repo/apigateway_archives/10.7/global_policies/Enforce_Protected_APIs_via_multiple_protocols.zip"
    local_path: "{{ ansible_env.HOME }}/install_artifacts/Enforce_Protected_APIs_via_multiple_protocols.zip"
    overwrite: "*"
    fixingMissingVersions: "true"
    preserveAssetState: "true"

## api aliases to import into gateway
vars_apigateway_aliases:
  - name: bookstore_endpoint
    description: bookstore endpoint alias
    type: simple
    owner: Administrator
    value: "{{ vars_apigateway_aliases_bookstore_endpoint }}"
    stage: ""
  - name: uszip_endpoint
    description: uszip endpoint alias
    type: simple
    owner: Administrator
    value: "{{ vars_apigateway_aliases_uszip_endpoint }}"
    stage: ""